AWSTemplateFormatVersion: '2010-09-09'
Description: Simple CRUD web service. State is stored in a DynamoDB table.
Resources:
  BucketPolicy:
    Properties:
      Bucket:
        Ref: PipelineBucket
      PolicyDocument:
        Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Principal: '*'
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: PipelineBucket
              - /*
          Sid: PublicReadForGetBucketObjects
        Version: '2012-10-17'
    Type: AWS::S3::BucketPolicy
  CodeBuild:
    Properties:
      Artifacts:
        Location:
          Ref: PipelineBucket
        Name: CaddyZip
        NamespaceType: NONE
        Packaging: NONE
        Type: S3
      Description: Code build project to prepare production caddy binary
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables: []
        Image: aws/codebuild/golang:1.7.3
        Type: LINUX_CONTAINER
      Name: aqferCodeBuild3
      ServiceRole:
        Fn::GetAtt:
        - CodeBuildServiceRole
        - Arn
      Source:
        BuildSpec:
          Fn::Join:
          - '

            '
          - - 'version: 0.2

              '
            - 'phases:'
            - '  build:'
            - '    commands:'
            - '      - ls -la'
        Location:
          Fn::Join:
          - ''
          - - 'arn:aws:s3:::'
            - Ref: PipelineBucket
            - /aqferPipeline3/RawCode/*
        Type: S3
      Tags: []
      TimeoutInMinutes: 60
    Type: AWS::CodeBuild::Project
  CodeBuildServiceRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource:
            - arn:aws:logs:us-east-1:545654232789:log-group:/aws/codebuild/aqferCodeBuild3
            - arn:aws:logs:us-east-1:545654232789:log-group:/aws/codebuild/aqferCodeBuild3:*
          - Action:
            - s3:PutObject
            - s3:GetObject
            - s3:GetObjectVersion
            Effect: Allow
            Resource:
            - arn:aws:s3:::codepipeline-us-east-1-*
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            Effect: Allow
            Resource:
              Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - Ref: PipelineBucket
                - /aqferPipeline3/RawCode/*
          - Action:
            - s3:PutObject
            Effect: Allow
            Resource:
              Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - Ref: PipelineBucket
                - /*
        PolicyName: CodeBuildPolicy
      RoleName: aqferCodeBuildRole3
    Type: AWS::IAM::Role
  CodePipeline:
    Properties:
      ArtifactStore:
        Location:
          Ref: PipelineBucket
        Type: S3
      Name: aqferPipeline3
      RoleArn:
        Fn::GetAtt:
        - CodePipelineRole
        - Arn
      Stages:
      - Actions:
        - ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: '1'
          Configuration:
            Branch: master
            OAuthToken: bfc246a4ec215d604f8235d60dbfc7b24a5450a5
            Owner: fellou89
            Repo: aqferwebserver
          InputArtifacts: []
          Name: Source
          OutputArtifacts:
          - Name: RawCode
          RunOrder: 1
        Name: Source
      - Actions:
        - ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          Configuration:
            ProjectName: aqferCodeBuild3
          InputArtifacts:
          - Name: RawCode
          Name:
            Ref: CodeBuild
          OutputArtifacts:
          - Name: CaddyZip
          RunOrder: 1
        Name: Build
    Type: AWS::CodePipeline::Pipeline
  CodePipelineRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Sid: ''
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            Effect: Allow
            Resource: '*'
          - Action:
            - s3:PutObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::codepipeline*
            - arn:aws:s3:::elasticbeanstalk*
          - Action:
            - codecommit:CancelUploadArchive
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:GetUploadArchiveStatus
            - codecommit:UploadArchive
            Effect: Allow
            Resource: '*'
          - Action:
            - codedeploy:CreateDeployment
            - codedeploy:GetApplicationRevision
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            Effect: Allow
            Resource: '*'
          - Action:
            - elasticbeanstalk:*
            - ec2:*
            - elasticloadbalancing:*
            - autoscaling:*
            - cloudwatch:*
            - s3:*
            - sns:*
            - cloudformation:*
            - rds:*
            - sqs:*
            - ecs:*
            - iam:PassRole
            Effect: Allow
            Resource: '*'
          - Action:
            - lambda:InvokeFunction
            - lambda:ListFunctions
            Effect: Allow
            Resource: '*'
          - Action:
            - opsworks:CreateDeployment
            - opsworks:DescribeApps
            - opsworks:DescribeCommands
            - opsworks:DescribeDeployments
            - opsworks:DescribeInstances
            - opsworks:DescribeStacks
            - opsworks:UpdateApp
            - opsworks:UpdateStack
            Effect: Allow
            Resource: '*'
          - Action:
            - cloudformation:CreateStack
            - cloudformation:DeleteStack
            - cloudformation:DescribeStacks
            - cloudformation:UpdateStack
            - cloudformation:CreateChangeSet
            - cloudformation:DeleteChangeSet
            - cloudformation:DescribeChangeSet
            - cloudformation:ExecuteChangeSet
            - cloudformation:SetStackPolicy
            - cloudformation:ValidateTemplate
            - iam:PassRole
            Effect: Allow
            Resource: '*'
          - Action:
            - codebuild:BatchGetBuilds
            - codebuild:StartBuild
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: CodePipelinePolicy
      RoleName: aqferCodepipelineRole3
    Type: AWS::IAM::Role
  DynamoDBTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: partition-key
        AttributeType: S
      - AttributeName: sort-key
        AttributeType: S
      KeySchema:
      - AttributeName: partition-key
        KeyType: HASH
      - AttributeName: sort-key
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      TableName: aqfer-idsync3
    Type: AWS::DynamoDB::Table
  EC2Instance:
    Properties:
      BlockDeviceMappings:
      - DeviceName: /dev/xvda
        Ebs:
          DeleteOnTermination: true
          VolumeSize: 8
          VolumeType: gp2
      ImageId: ami-55ef662f
      InstanceType: t2.nano
      KeyName: AqferKeyPair
      NetworkInterfaces:
      - AssociatePublicIpAddress: 'true'
        DeleteOnTermination: 'true'
        DeviceIndex: '0'
        GroupSet:
        - Ref: SecurityGroup
        SubnetId:
          Ref: PublicSubnet
    Type: AWS::EC2::Instance
  PipelineBucket:
    Properties:
      BucketName: aqfer-cloudformation3
      VersioningConfiguration:
        Status: Enabled
      WebsiteConfiguration:
        ErrorDocument: index.html
        IndexDocument: index.html
    Type: AWS::S3::Bucket
  PublicSubnet:
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  SecurityGroup:
    Properties:
      GroupDescription: Doing if for each instance, could create one apart to reuse
      GroupName: launch-wizard-3
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        FromPort: '80'
        IpProtocol: tcp
        ToPort: '80'
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: '22'
        IpProtocol: tcp
        ToPort: '22'
      VpcId:
        Ref: VPC
    Type: AWS::EC2::SecurityGroup
  VPC:
    Properties:
      CidrBlock: 10.0.0.0/16
    Type: AWS::EC2::VPC
Transform: AWS::Serverless-2016-10-31
